{"version":3,"sources":["components/LocationsNavItem.js","components/LocationsNavBar.js","components/App.js","registerServiceWorker.js","index.js"],"names":["LocationsNavItem","react_default","a","createElement","role","className","tabIndex","onKeyPress","this","props","openInfoWindow","bind","data","marker","onClick","locationName","React","Component","LocationsNavBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","locations","query","suggestions","filterLocations","assertThisInitialized","toggleSuggestions","event","closeInfoWindow","value","target","forEach","location","toLowerCase","indexOf","setVisible","push","setState","map","listItem","index","components_LocationsNavItem","key","aria-labelledby","id","type","placeholder","onChange","App","name","latitude","longitude","infowindow","prevmarker","initMap","window","src","ref","document","getElementsByTagName","script","async","onerror","write","parentNode","insertBefore","loadMap","self","mapview","getElementById","style","height","innerHeight","google","maps","Map","center","lat","lng","zoom","mapTypeControl","InfoWindow","addListener","addDomListener","getCenter","trigger","setCenter","icon","url","scaledSize","Size","Marker","position","LatLng","animation","Animation","DROP","display","open","setIcon","setAnimation","BOUNCE","setContent","getPosition","panBy","getMarkerInfo","fetch","then","response","status","json","location_data","venues","address","formattedAddress","verified","readMore","catch","err","close","components_LocationsNavBar","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","error","ReactDOM","render","components_App","URL","process","origin","addEventListener","concat","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.962c67a1.chunk.js","sourcesContent":["import React from 'react';\n\nclass LocationsNavItem extends React.Component {\n    /** Renders every Locations-NavBar Item: Side Vertical nav */\n    render() {\n        return (\n            <li\n                role=\"button\"\n                className=\"box\"\n                tabIndex=\"0\"\n                onKeyPress={this.props.openInfoWindow.bind(this, this.props.data.marker)}\n                onClick={this.props.openInfoWindow.bind(this, this.props.data.marker)}>{this.props.data.locationName}\n            </li>\n        );\n    }\n}\n\nexport default LocationsNavItem;","import React, {Component} from 'react';\nimport LocationsNavItem from './LocationsNavItem';\n\nclass LocationsNavBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            'locations': '',\n            'query': '',\n            'suggestions': true,\n        };\n\n        //Bindings filterLocations and toggleSuggestions\n        this.filterLocations = this.filterLocations.bind(this);\n        this.toggleSuggestions = this.toggleSuggestions.bind(this);\n    }\n\n    /**\n     * Function to filter locations as per the query passed by the user in filter input box.\n     */\n    filterLocations(event) {\n        this.props.closeInfoWindow();\n        const {value} = event.target;\n        var locations = [];\n        this.props.locations.forEach(function (location) {\n            if (location.locationName.toLowerCase().indexOf(value.toLowerCase()) >= 0) {\n                location.marker.setVisible(true);\n                locations.push(location);\n            } else {\n                location.marker.setVisible(false);\n            }\n        });\n\n        this.setState({\n            'locations': locations,\n            'query': value\n        });\n    }\n\n    componentWillMount() {\n        this.setState({\n            'locations': this.props.locations\n        });\n    }\n\n    /**\n     * Function to toggle the view of suggestions by Show/hide suggestions button\n     */\n    toggleSuggestions() {\n        this.setState({\n            'suggestions': !this.state.suggestions\n        });\n    }\n\n    render() {\n        var LocationsNavBar = this.state.locations.map(function (listItem, index) {\n            return (\n                <LocationsNavItem key={index} openInfoWindow={this.props.openInfoWindow.bind(this)} data={listItem}/>\n            );\n            \n        }, this);\n\n        return (\n            <div className=\"search\">\n                <input role=\"search\" aria-labelledby=\"search\" id=\"search-field\" className=\"search-field\" type=\"text\" placeholder=\"Filter\"\n                       value={this.state.query} onChange={this.filterLocations}/>\n                <ul>\n                    {this.state.suggestions && LocationsNavBar}\n                </ul>\n                <button className=\"button\" onClick={this.toggleSuggestions}>Show/Hide Suggestions</button>\n            </div>\n        );\n    }\n}\n\nexport default LocationsNavBar;","import React, { Component } from 'react';\nimport LocationsNavBar from './LocationsNavBar';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            'locations': [\n                {\n                    'name': \"Lalbagh Botnical Garden\",\n                    'latitude': 12.9507,\n                    'longitude': 77.5848\n                },\n                {\n                    'name': \"Cubbon Park\",\n                    'latitude': 12.9763,\n                    'longitude': 77.5929\n                },\n                {\n                    'name': \"Bangalore Fort\",\n                    'latitude': 12.9629,\n                    'longitude': 77.5760\n                },\n                {\n                    'name': \"Tipu Sultan's Summer Palace\",\n                    'latitude': 12.9593,\n                    'longitude': 77.5737\n                },\n                {\n                    'name': \"ISKCON Temple\",\n                    'latitude': 13.0098,\n                    'longitude': 77.5511\n                },\n                {\n                    'name': \"National Gallery of Modern Art\",\n                    'latitude': 12.9897,\n                    'longitude': 77.5881\n                },\n                {\n                    'name': \"Shree Dodda Ganapathi Temple\",\n                    'latitude': 12.9429,\n                    'longitude': 77.5682\n                },\n                {\n                    'name': \"Turahalli Forest\",\n                    'latitude': 12.8818,\n                    'longitude': 77.5272\n                },\n                {\n                    'name': \"Bangalore Palace\",\n                    'latitude': 12.9988,\n                    'longitude': 77.592\n                }\n            ],\n            'map': '',\n            'infowindow': '',\n            'prevmarker': ''\n        };\n\n        // Bindings\n        this.initMap = this.initMap.bind(this);\n        this.openInfoWindow = this.openInfoWindow.bind(this);\n        this.closeInfoWindow = this.closeInfoWindow.bind(this);\n    }\n\n    componentDidMount() {\n        window.initMap = this.initMap;\n        // Loads Google Maps Script asynchronously.\n        loadMap('https://maps.googleapis.com/maps/api/js?key=AIzaSyAg1zHsjgjRxh8rUak1oaikq_DDu7zqHyE&callback=initMap')\n    }\n\n    /**\n     * Initialise the map after loading google map script \n     */\n    initMap() {\n        var self = this;\n\n        //Map Style\n        var mapview = document.getElementById('map');\n        mapview.style.height = window.innerHeight + \"px\";\n        var map = new window.google.maps.Map(mapview, {\n            center: { lat: 12.9897, lng: 77.5881 },\n            zoom: 13,\n            mapTypeControl: false\n        });\n\n        var InfoWindow = new window.google.maps.InfoWindow({});\n\n        window.google.maps.event.addListener(InfoWindow, 'closeclick', function () {\n            self.closeInfoWindow();\n        });\n\n        this.setState({\n            'map': map,\n            'infowindow': InfoWindow\n        });\n\n        window.google.maps.event.addDomListener(window, \"resize\", function () {\n            var center = map.getCenter();\n            window.google.maps.event.trigger(map, \"resize\");\n            self.state.map.setCenter(center);\n        });\n\n        window.google.maps.event.addListener(map, 'click', function () {\n            self.closeInfoWindow();\n        });\n\n        var locations = [];\n        //Custom Marker\n        var icon = {\n            url: \"markerOrange.png\",\n            scaledSize: new window.google.maps.Size(35, 50), // scaled size\n        };\n        //Marker Style\n        this.state.locations.forEach(function (location) {\n            var locationName = location.name;\n            var marker = new window.google.maps.Marker({\n                position: new window.google.maps.LatLng(location.latitude, location.longitude),\n                icon: icon,\n                animation: window.google.maps.Animation.DROP,\n                map: map\n            });\n\n            marker.addListener('click', function () {\n                self.openInfoWindow(marker);\n            });\n\n            location.locationName = locationName;\n            location.marker = marker;\n            location.display = true;\n            locations.push(location);\n        });\n        this.setState({\n            'locations': locations\n        });\n    }\n\n    /**\n     * Opens InfoWindow and shows relevant content by calling getMarkerInfo.\n     */\n    openInfoWindow(marker) {\n        var icon = {\n            url: \"markerGreen.png\", \n            scaledSize: new window.google.maps.Size(35, 50), // scaled size\n        };\n        this.closeInfoWindow();\n        this.state.infowindow.open(this.state.map, marker);\n        marker.setIcon(icon);\n        marker.setAnimation(window.google.maps.Animation.BOUNCE);\n        this.setState({\n            'prevmarker': marker\n        });\n        this.state.infowindow.setContent('Loading Information Content...');\n        this.state.map.setCenter(marker.getPosition());\n        this.state.map.panBy(0, -200);\n        this.getMarkerInfo(marker);\n    }\n\n    /**\n     * Shows the content of the marked location using FourSquare Api.\n     */\n    getMarkerInfo(marker) {\n        var self = this;\n        var clientId = \"L1P2MQSSOFSROG5NLFGT1JWFW5J23XZSENK4ZDKFFPJPNWXN\";\n        var clientSecret = \"OKE2U3YDZRT4ZW44T5UZKHWIUHQTQDQDR2XK25DD5JIIWUYN\";\n        var url = \"https://api.foursquare.com/v2/venues/search?client_id=\" + clientId + \"&client_secret=\" + clientSecret + \"&v=20130815&ll=\" + marker.getPosition().lat() + \",\" + marker.getPosition().lng() + \"&limit=1\";\n        fetch(url)\n            .then(\n                function (response) {\n                    if (response.status !== 200) {\n                        self.state.infowindow.setContent(\"Sorry data can't be loaded\");\n                        return;\n                    }\n                    //Fetching response data\n                    response.json().then(function (data) {\n                        var location_data = data.response.venues[0];\n                        var name = '<h3>' + location_data.name + '</h3>';\n                        var address = '<b>Address: </b>' + location_data.location.formattedAddress + '<br>';\n                        var verified = '<b>Verified Location: </b>' + location_data.verified + '<br>';\n                        var readMore = '<a href=\"https://foursquare.com/v/' + location_data.id + '\" target=\"_blank\">Read More on Foursquare Website</a>'\n                        //console.log(data.response.venues);\n                        self.state.infowindow.setContent(name + address + verified + readMore);\n                    });\n                }\n            )\n            .catch(function (err) {\n                self.state.infowindow.setContent(\"Sorry data can't be loaded\");\n            });\n    }\n\n\n    /**\n     * Closes infowindow \n     */\n    closeInfoWindow() {\n        if (this.state.prevmarker) {\n            this.state.prevmarker.setAnimation(null);\n        }\n        this.setState({\n            'prevmarker': ''\n        });\n        this.state.infowindow.close();\n    }\n\n    render() {\n        return (\n            <div>\n                <header>Bangalore Tourism</header>\n                <LocationsNavBar key=\"100\" locations={this.state.locations} openInfoWindow={this.openInfoWindow}\n                    closeInfoWindow={this.closeInfoWindow} />\n                <div id=\"map\" role=\"application\" aria-labelledby=\"map\"></div>\n                <footer>Copyright: Nikita Jibhkate, 2018</footer>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n/**\n * Loads the google maps script\n */\nfunction loadMap(src) {\n    var ref = window.document.getElementsByTagName(\"script\")[0];\n    var script = window.document.createElement(\"script\");\n    script.src = src;\n    script.async = true;\n    script.onerror = function () {\n        document.write(\"Unable to load Google Maps.\");\n    };\n    ref.parentNode.insertBefore(script, ref);\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App></App>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}